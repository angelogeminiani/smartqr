/*!
 * SmartForge - _application
 * Copyright(c) 2011 Gian Angelo Geminiani
 * MIT Licensed
 */


var utils = require('../utils.js')
    logging = require('../module_logging')
    ;

var _logger = new logging.Logger();

// --------------------------------------------------------------------------------------------------------------
//                              public
// --------------------------------------------------------------------------------------------------------------

/**
 * Returns a logger.
 * @param path Logger name. If null, the default logger is returned
 */
function getLogger(name){
    if(name){
        // new instance
        return new logging.Logger(name);
    } else {
        return _logger;
    }
}

/**
 * Set log level ('error', 'warning', 'info', 'fine')
 * @param level
 */
function setLogLevel(level){
    _logger.setLevel(level);
    logging.setLevel(level);
}

function setLogEnableColor(b){
    _logger.enableColor(b);
    logging.enableColor(b);
}

function log(){
    var args = [];
    utils.push(args, utils.toArray(arguments));
    utils.defer(function(){
        _logger.log.apply(_logger, args);
    });
}

function error(){
    var args = ['error'];
    utils.push(args, utils.toArray(arguments));
    utils.defer(function(){
        _logger.log.apply(_logger, args);
    });
}

function warning(){
    var args = ['warning'];
    utils.push(args, utils.toArray(arguments));
    utils.defer(function(){
        _logger.log.apply(_logger, args);
    });
}

function info(){
    var args = ['info'];
    utils.push(args, utils.toArray(arguments));
    utils.defer(function(){
        _logger.log.apply(_logger, args);
    });
}

function fine(){
    var args = ['fine'];
    utils.push(args, utils.toArray(arguments));
    utils.defer(function(){
        _logger.log.apply(_logger, args);
    });
}

// --------------------------------------------------------------------------------------------------------------
//                              exports
// --------------------------------------------------------------------------------------------------------------
exports = module.exports;
exports.getLogger = getLogger;
exports.setLogLevel = setLogLevel;
exports.setLogEnableColor = setLogEnableColor;
exports.log = log;
exports.error = error;
exports.warning = warning;
exports.info = info;
exports.fine = fine;
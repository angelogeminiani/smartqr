/*!
 * SmartForge - deploy
 * Copyright(c) 2011 Gian Angelo Geminiani
 * MIT Licensed
 *
 * This module help you to copy files or directories from a source to a target.
 *
 */

/**
 * Module Dependencies
 */
var utils = require('../utils.js')
    , utilsFs = require('../utilsFs.js')
    ;

// --------------------------------------------------------------------------------------------------------------
//                              public
// --------------------------------------------------------------------------------------------------------------

/**
 *
 * @param options {object}
 *      - root {string}: Path root. i.e. '/myapp'
 *      - resources {array of resource}:
 *          [resource] {object}:
 *              - source {string}: Source path. Directory or file.
 *              - target {string}: Target path. Directory or file.
 *              - enabled {boolean}: Optional, default true.
 *              - overwrite {boolean}: Optional, default true.
 *      - logger {module_logging.Logger}: Optional, default is null;
 *
 */
function Deployer(options){
    var self = this;

    options = options||{};

    //-- public properties --//
    self.root = options.root||__dirname;
    self.resources = options.resources||new Array();
    self.logger = options.logger||console;
}

Deployer.prototype.deploy = function(){
    beginDeploy(this);
};

// --------------------------------------------------------------------------------------------------------------
//                              private
// --------------------------------------------------------------------------------------------------------------

function beginDeploy(self){
    var resources = self.resources;
    for(var i=0;i<resources.length;i++){
        var resource = resources[i];
        if(null===resource.enabled || resource.enabled===true){
            deployResource(self, resource);
        }
    }
}

function deployResource(self, resource){
    var logger = self.logger,
        root = self.root,
        source = utilsFs.pathResolve(root, resource.source),
        target = utilsFs.pathResolve(root, resource.target),
        overwrite = null===resource.overwrite?true:resource.overwrite;

    if(utilsFs.exists(source)){
        utilsFs.copySync(source, target, overwrite);
        // log
        self.logger.log(utils.format("Overwrite: {0}. Deployed '{1}' to '{2}'", overwrite, source, target));
    }
}

// --------------------------------------------------------------------------------------------------------------
//                              exports
// --------------------------------------------------------------------------------------------------------------

exports.Deployer = module.exports.Deployer = Deployer;

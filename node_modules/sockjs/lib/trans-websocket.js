(function() {
  var utils, websocket_hixie76, websocket_hybi10;
  utils = require('./utils');
  websocket_hixie76 = require('./trans-websocket-hixie76');
  websocket_hybi10 = require('./trans-websocket-hybi10');
  exports.app = {
    websocket: function(req, connection, head) {
      var conn, location, origin, ver;
      if ((req.headers.upgrade || '').toLowerCase() !== 'websocket') {
        throw {
          status: 400,
          message: 'Can "Upgrade" only to "WebSocket".'
        };
      }
      conn = (req.headers.connection || '').toLowerCase();
      if ((conn.split(/, */)).indexOf('upgrade') === -1) {
        throw {
          status: 400,
          message: '"Connection" must be "Upgrade".'
        };
      }
      origin = req.headers.origin;
      if (!utils.verify_origin(origin, this.options.origins)) {
        throw {
          status: 400,
          message: 'Unverified origin.'
        };
      }
      location = (origin && origin.slice(0, 5) === 'https' ? 'wss' : 'ws');
      location += '://' + req.headers.host + req.url;
      ver = req.headers['sec-websocket-version'];
      if (ver === '7' || ver === '8' || ver === '13') {
        new websocket_hybi10.WebHandshake8(this, req, connection, head || '', origin, location);
      } else {
        new websocket_hixie76.WebHandshakeHixie76(this, req, connection, head || '', origin, location);
      }
      return true;
    },
    websocket_get: function(req, rep) {
      throw {
        status: 400,
        message: 'Can "Upgrade" only to "WebSocket".'
      };
    }
  };
}).call(this);
